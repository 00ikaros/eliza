"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[92536],{82089:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"guides/configuration","title":"\u2699\ufe0f Configuration Guide","description":"This guide covers how to configure Eliza for different use cases and environments. We\'ll walk through all available configuration options and best practices.","source":"@site/docs/guides/configuration.md","sourceDirName":"guides","slug":"/guides/configuration","permalink":"/eliza/docs/guides/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/main/docs/docs/guides/configuration.md","tags":[],"version":"current","lastUpdatedBy":"madjin","lastUpdatedAt":1739414584000,"sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Evaluators","permalink":"/eliza/docs/core/evaluators"},"next":{"title":"Docker Setup","permalink":"/eliza/docs/guides/docker-setup"}}');var t=i(74848),a=i(28453);const s={sidebar_position:9},o="\u2699\ufe0f Configuration Guide",l={},c=[{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Core Environment Variables",id:"core-environment-variables",level:3},{value:"Client-Specific Configuration",id:"client-specific-configuration",level:3},{value:"Discord Configuration",id:"discord-configuration",level:4},{value:"Twitter Configuration",id:"twitter-configuration",level:4},{value:"Telegram Configuration",id:"telegram-configuration",level:4},{value:"Model Provider Settings",id:"model-provider-settings",level:3},{value:"Cloudflare AI Gateway Integration",id:"cloudflare-ai-gateway-integration",level:3},{value:"Image Generation",id:"image-generation",level:3},{value:"Character Configuration",id:"character-configuration",level:2},{value:"Character File Structure",id:"character-file-structure",level:3},{value:"Loading Characters",id:"loading-characters",level:3},{value:"Secrets for Multiple Characters",id:"secrets-for-multiple-characters",level:3},{value:"Custom Actions",id:"custom-actions",level:2},{value:"Adding Custom Actions",id:"adding-custom-actions",level:3},{value:"Action Configuration Structure",id:"action-configuration-structure",level:3},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"Database Providers",id:"database-providers",level:3},{value:"Model Providers",id:"model-providers",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Runtime Settings",id:"runtime-settings",level:3},{value:"Configuration Best Practices",id:"configuration-best-practices",level:2},{value:"FAQ",id:"faq",level:2},{value:"How do I manage multiple environment configurations?",id:"how-do-i-manage-multiple-environment-configurations",level:3},{value:"How do I configure different model providers?",id:"how-do-i-configure-different-model-providers",level:3},{value:"How do I handle secrets and credentials?",id:"how-do-i-handle-secrets-and-credentials",level:3},{value:"How do I adjust the temperature setting in my character file?",id:"how-do-i-adjust-the-temperature-setting-in-my-character-file",level:3},{value:"I&#39;m getting an authentication error (&quot;No auth credentials found&quot;). What should I do?",id:"im-getting-an-authentication-error-no-auth-credentials-found-what-should-i-do",level:3},{value:"How do I debug when my agent isn&#39;t responding?",id:"how-do-i-debug-when-my-agent-isnt-responding",level:3},{value:"How do I control my agent&#39;s behavior across platforms?",id:"how-do-i-control-my-agents-behavior-across-platforms",level:3},{value:"Further Resources",id:"further-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\ufe0f-configuration-guide",children:"\u2699\ufe0f Configuration Guide"})}),"\n",(0,t.jsx)(n.p,{children:"This guide covers how to configure Eliza for different use cases and environments. We'll walk through all available configuration options and best practices."}),"\n",(0,t.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsx)(n.p,{children:"The first step is creating your environment configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,t.jsx)(n.h3,{id:"core-environment-variables",children:"Core Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"Here are the essential environment variables you need to configure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Core API Keys\nOPENAI_API_KEY=sk-your-key # Required for OpenAI features\nANTHROPIC_API_KEY=your-key  # Required for Claude models\nTOGETHER_API_KEY=your-key   # Required for Together.ai models\n"})}),"\n",(0,t.jsx)(n.h3,{id:"client-specific-configuration",children:"Client-Specific Configuration"}),"\n",(0,t.jsx)(n.h4,{id:"discord-configuration",children:"Discord Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"DISCORD_APPLICATION_ID=     # Your Discord app ID\nDISCORD_API_TOKEN=         # Discord bot token\n"})}),"\n",(0,t.jsx)(n.h4,{id:"twitter-configuration",children:"Twitter Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"TWITTER_USERNAME=          # Bot Twitter username\nTWITTER_PASSWORD=          # Bot Twitter password\nTWITTER_EMAIL=            # Twitter account email\nTWITTER_DRY_RUN=false    # Test mode without posting\n"})}),"\n",(0,t.jsx)(n.h4,{id:"telegram-configuration",children:"Telegram Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"TELEGRAM_BOT_TOKEN=       # Telegram bot token\n"})}),"\n",(0,t.jsx)(n.h3,{id:"model-provider-settings",children:"Model Provider Settings"}),"\n",(0,t.jsx)(n.p,{children:"You can configure different AI model providers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# OpenAI Settings\nOPENAI_API_KEY=sk-*\n\n# Anthropic Settings\nANTHROPIC_API_KEY=\n\n# Together.ai Settings\nTOGETHER_API_KEY=\n\n# Heurist Settings\nHEURIST_API_KEY=\n\n# Livepeer Settings\nLIVEPEER_GATEWAY_URL=\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cloudflare-ai-gateway-integration",children:"Cloudflare AI Gateway Integration"}),"\n",(0,t.jsxs)(n.p,{children:["Eliza supports routing API calls through ",(0,t.jsx)(n.a,{href:"https://developers.cloudflare.com/ai-gateway/",children:"Cloudflare AI Gateway"}),", which provides several benefits:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Detailed analytics and monitoring of message traffic and response times"}),"\n",(0,t.jsx)(n.li,{children:"Cost optimization through request caching and usage tracking across providers"}),"\n",(0,t.jsx)(n.li,{children:"Improved latency through Cloudflare's global network"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive visibility into message content and token usage"}),"\n",(0,t.jsx)(n.li,{children:"Cost analysis and comparison between different AI providers"}),"\n",(0,t.jsx)(n.li,{children:"Usage patterns and trends visualization"}),"\n",(0,t.jsx)(n.li,{children:"Request/response logging for debugging and optimization"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To enable Cloudflare AI Gateway:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Cloudflare AI Gateway Settings\nCLOUDFLARE_GW_ENABLED=true\nCLOUDFLARE_AI_ACCOUNT_ID=your-account-id\nCLOUDFLARE_AI_GATEWAY_ID=your-gateway-id\n"})}),"\n",(0,t.jsx)(n.p,{children:"Supported providers through Cloudflare AI Gateway:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OpenAI"}),"\n",(0,t.jsx)(n.li,{children:"Anthropic"}),"\n",(0,t.jsx)(n.li,{children:"Groq"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When enabled, Eliza will automatically route requests through your Cloudflare AI Gateway endpoint. The gateway URL is constructed in the format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"https://gateway.ai.cloudflare.com/v1/${accountId}/${gatewayId}/${provider}\n"})}),"\n",(0,t.jsx)(n.p,{children:"If the gateway configuration is incomplete or disabled, Eliza will fall back to direct API calls."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Cloudflare AI Gateway Settings\nCLOUDFLARE_GW_ENABLED=true\nCLOUDFLARE_AI_ACCOUNT_ID=your-account-id\nCLOUDFLARE_AI_GATEWAY_ID=your-gateway-id\n"})}),"\n",(0,t.jsx)(n.p,{children:"Supported providers through Cloudflare AI Gateway:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OpenAI"}),"\n",(0,t.jsx)(n.li,{children:"Anthropic"}),"\n",(0,t.jsx)(n.li,{children:"Groq"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When enabled, Eliza will automatically route requests through your Cloudflare AI Gateway endpoint. The gateway URL is constructed in the format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"https://gateway.ai.cloudflare.com/v1/${accountId}/${gatewayId}/${provider}\n"})}),"\n",(0,t.jsx)(n.p,{children:"If the gateway configuration is incomplete or disabled, Eliza will fall back to direct API calls."}),"\n",(0,t.jsx)(n.h3,{id:"image-generation",children:"Image Generation"}),"\n",(0,t.jsx)(n.p,{children:"Configure image generation in your character file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "modelProvider": "heurist",\n    "settings": {\n        "imageSettings": {\n            "steps": 20,\n            "width": 1024,\n            "height": 1024\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const result = await generateImage(\n    {\n        prompt: 'A cute anime girl with big breasts and straight long black hair wearing orange T-shirt.',\n        width: 1024,\n        height: 1024,\n        numIterations: 20, // optional\n        guidanceScale: 3, // optional\n        seed: -1, // optional\n        modelId: \"FLUX.1-dev\", // optional\n    },\n    runtime,\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"character-configuration",children:"Character Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"character-file-structure",children:"Character File Structure"}),"\n",(0,t.jsxs)(n.p,{children:["Character files define your agent's personality and behavior. Create them in the ",(0,t.jsx)(n.code,{children:"characters/"})," directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "name": "AgentName",\n    "clients": ["discord", "twitter"],\n    "modelProvider": "openai",\n    "settings": {\n        "secrets": {\n            "OPENAI_API_KEY": "character-specific-key",\n            "DISCORD_TOKEN": "bot-specific-token"\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"loading-characters",children:"Loading Characters"}),"\n",(0,t.jsx)(n.p,{children:"You can load characters in several ways:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Load default character\npnpm start\n\n# Load specific character\npnpm start --characters="characters/your-character.json"\n\n# Load multiple characters\npnpm start --characters="characters/char1.json,characters/char2.json"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"secrets-for-multiple-characters",children:"Secrets for Multiple Characters"}),"\n",(0,t.jsxs)(n.p,{children:["If you don't want to have secrets in your character files because you would\nlike to utilize source control for collaborative development on multiple\ncharacters, then you can put all character secrets in ",(0,t.jsx)(n.code,{children:".env"})," by prepending\n",(0,t.jsx)(n.code,{children:"CHARACTER.NAME."})," before the key name and value. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# C3PO\nCHARACTER.C3PO.DISCORD_APPLICATION_ID=abc\nCHARACTER.C3PO.DISCORD_API_TOKEN=xyz\n\n# DOBBY\nCHARACTER.DOBBY.DISCORD_APPLICATION_ID=123\nCHARACTER.DOBBY.DISCORD_API_TOKEN=369\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-actions",children:"Custom Actions"}),"\n",(0,t.jsx)(n.h3,{id:"adding-custom-actions",children:"Adding Custom Actions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.code,{children:"custom_actions"})," directory"]}),"\n",(0,t.jsx)(n.li,{children:"Add your action files there"}),"\n",(0,t.jsxs)(n.li,{children:["Configure in ",(0,t.jsx)(n.code,{children:"elizaConfig.yaml"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"actions:\n    - name: myCustomAction\n      path: ./custom_actions/myAction.ts\n"})}),"\n",(0,t.jsx)(n.h3,{id:"action-configuration-structure",children:"Action Configuration Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export const myAction: Action = {\n    name: "MY_ACTION",\n    similes: ["SIMILAR_ACTION", "ALTERNATE_NAME"],\n    validate: async (runtime: IAgentRuntime, message: Memory) => {\n        // Validation logic\n        return true;\n    },\n    description: "Action description",\n    handler: async (runtime: IAgentRuntime, message: Memory) => {\n        // Action logic\n        return true;\n    },\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"database-providers",children:"Database Providers"}),"\n",(0,t.jsx)(n.p,{children:"Configure different database backends:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// SQLite (Recommended for development)\nimport { SqliteDatabaseAdapter } from "@your-org/agent-framework/adapters";\nconst db = new SqliteDatabaseAdapter("./dev.db");\n\n// PostgreSQL (Production)\nimport { PostgresDatabaseAdapter } from "@your-org/agent-framework/adapters";\nconst db = new PostgresDatabaseAdapter({\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT),\n    database: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"model-providers",children:"Model Providers"}),"\n",(0,t.jsx)(n.p,{children:"Configure model providers in your character file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "modelProvider": "openai",\n    "settings": {\n        "model": "gpt-4o-mini",\n        "temperature": 0.7,\n        "maxTokens": 2000\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"runtime-settings",children:"Runtime Settings"}),"\n",(0,t.jsx)(n.p,{children:"Fine-tune runtime behavior:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const settings = {\n    // Logging\n    DEBUG: "eliza:*",\n    LOG_LEVEL: "info",\n\n    // Performance\n    MAX_CONCURRENT_REQUESTS: 5,\n    REQUEST_TIMEOUT: 30000,\n\n    // Memory\n    MEMORY_TTL: 3600,\n    MAX_MEMORY_ITEMS: 1000,\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-best-practices",children:"Configuration Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Environment Segregation"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use different ",(0,t.jsx)(n.code,{children:".env"})," files for different environments"]}),"\n",(0,t.jsxs)(n.li,{children:["Follow naming convention: ",(0,t.jsx)(n.code,{children:".env.development"}),", ",(0,t.jsx)(n.code,{children:".env.staging"}),", ",(0,t.jsx)(n.code,{children:".env.production"})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Secret Management"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Never commit secrets to version control","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Github has branch / workflow protection"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Use secret management services in production"}),"\n",(0,t.jsx)(n.li,{children:"Rotate API keys regularly"}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Character Configuration"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep character files modular and focused"}),"\n",(0,t.jsx)(n.li,{children:"Use inheritance for shared traits"}),"\n",(0,t.jsx)(n.li,{children:"Document character behaviors"}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Plugin Management"})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enable only needed plugins"}),"\n",(0,t.jsx)(n.li,{children:"Configure plugin-specific settings in separate files"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-manage-multiple-environment-configurations",children:"How do I manage multiple environment configurations?"}),"\n",(0,t.jsx)(n.p,{children:"Use different .env files (.env.development, .env.staging, .env.production) and load them based on NODE_ENV."}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-configure-different-model-providers",children:"How do I configure different model providers?"}),"\n",(0,t.jsxs)(n.p,{children:["Set ",(0,t.jsx)(n.code,{children:"modelProvider"})," in your character.json and add corresponding API keys in ",(0,t.jsx)(n.code,{children:".env"})," or character secrets. Supports Anthropic, OpenAI, DeepSeek, and others."]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-handle-secrets-and-credentials",children:"How do I handle secrets and credentials?"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:".env"})," file for global settings or add secrets in ",(0,t.jsx)(n.code,{children:"character.json"})," under ",(0,t.jsx)(n.code,{children:"settings.secrets"})," for per-agent configuration."]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-adjust-the-temperature-setting-in-my-character-file",children:"How do I adjust the temperature setting in my character file?"}),"\n",(0,t.jsx)(n.p,{children:"The temperature setting controls response randomness and can be configured in your character's JSON file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "modelProvider": "openrouter",\n    "temperature": 0.7,\n    "settings": {\n        "maxInputTokens": 200000,\n        "maxOutputTokens": 8192,\n        "model": "large"\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Increase temperature for more creative responses, decrease for more consistent outputs."}),"\n",(0,t.jsx)(n.h3,{id:"im-getting-an-authentication-error-no-auth-credentials-found-what-should-i-do",children:'I\'m getting an authentication error ("No auth credentials found"). What should I do?'}),"\n",(0,t.jsx)(n.p,{children:"Check these common issues:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Verify API keys in your .env file"}),"\n",(0,t.jsx)(n.li,{children:"Ensure keys are properly formatted"}),"\n",(0,t.jsx)(n.li,{children:"Check logs for specific authentication errors"}),"\n",(0,t.jsx)(n.li,{children:"Try restarting the application after updating credentials"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-debug-when-my-agent-isnt-responding",children:"How do I debug when my agent isn't responding?"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Enable debug logging: ",(0,t.jsx)(n.code,{children:"DEBUG=eliza:*"})," in your .env file"]}),"\n",(0,t.jsx)(n.li,{children:"Check database for saved messages"}),"\n",(0,t.jsx)(n.li,{children:"Verify model provider connectivity"}),"\n",(0,t.jsx)(n.li,{children:"Review logs for error messages"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-control-my-agents-behavior-across-platforms",children:"How do I control my agent's behavior across platforms?"}),"\n",(0,t.jsxs)(n.p,{children:["Configure platform-specific settings in ",(0,t.jsx)(n.code,{children:".env"})," (like ",(0,t.jsx)(n.code,{children:"TWITTER_TARGET_USERS"}),") and adjust response templates in your character file."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"further-resources",children:"Further Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/eliza/docs/quickstart",children:"Quickstart Guide"})," for initial setup"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/eliza/docs/guides/secrets-management",children:"Secrets Management"})," for secure configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/eliza/docs/guides/local-development",children:"Local Development"})," for development setup"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/eliza/docs/guides/advanced",children:"Advanced Usage"})," for complex configurations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(96540);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);