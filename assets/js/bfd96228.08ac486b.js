"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[24312],{32329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"variables/shouldRespondTemplate","title":"shouldRespondTemplate","description":"@elizaos/core v1.0.0-beta.7 / shouldRespondTemplate","source":"@site/api/variables/shouldRespondTemplate.md","sourceDirName":"variables","slug":"/variables/shouldRespondTemplate","permalink":"/api/variables/shouldRespondTemplate","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"postCreationTemplate","permalink":"/api/variables/postCreationTemplate"},"next":{"title":"stringArrayFooter","permalink":"/api/variables/stringArrayFooter"}}');var s=t(31085),a=t(71184);const r={},i="Variable: shouldRespondTemplate",l={},d=[{value:"Defined in",id:"defined-in",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.0.0-beta.7"})," / shouldRespondTemplate"]}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"variable-shouldrespondtemplate",children:"Variable: shouldRespondTemplate"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"const"})," ",(0,s.jsx)(n.strong,{children:"shouldRespondTemplate"}),': "# Task: Decide on behalf of {{agentName}} whether they should respond to the message, ignore it or stop the conversation.\\n{{providers}}\\n# Instructions: Decide if {{agentName}} should respond to or interact with the conversation.\\nIf the message is directed at or relevant to {{agentName}}, respond with RESPOND action.\\nIf a user asks {{agentName}} to be quiet, respond with STOP action.\\nIf {{agentName}} should ignore the message, respond with IGNORE action.\\nIf responding with the RESPOND action, include a list of optional providers that could be relevant to the response.\\nResponse format should be formatted in a valid JSON block like this:\\n```json\\n{\\n    "name": "{{agentName}}",\\n\\t"reasoning": "<string>",\\n    "action": "RESPOND" | "IGNORE" | "STOP",\\n    "providers": ["<string>", "<string>", ...]\\n}\\n```\\nYour response should include the valid JSON block and nothing else."']}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/elizaOS/eliza/blob/main/packages/core/src/prompts.ts#L289",children:"packages/core/src/prompts.ts:289"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(14041);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);