"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93233],{33542:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"cli/plugins","title":"Plugin Command","description":"The plugin command helps you manage ElizaOS plugins - modular extensions that add capabilities to your agents.","source":"@site/docs/cli/plugins.md","sourceDirName":"cli","slug":"/cli/plugins","permalink":"/docs/cli/plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/main/docs/docs/cli/plugins.md","tags":[],"version":"current","lastUpdatedBy":"Shaw","lastUpdatedAt":1742108548000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Environment","permalink":"/docs/cli/env"},"next":{"title":"Projects","permalink":"/docs/cli/projects"}}');var s=n(31085),t=n(71184);const r={sidebar_position:5},c="Plugin Command",d={},o=[{value:"Usage",id:"usage",level:2},{value:"Actions",id:"actions",level:2},{value:"Publishing Plugins",id:"publishing-plugins",level:2},{value:"Options",id:"options",level:3},{value:"Publishing Process",id:"publishing-process",level:3},{value:"Examples",id:"examples",level:3},{value:"Test Publishing",id:"test-publishing",level:4},{value:"Publishing to npm",id:"publishing-to-npm",level:4},{value:"Publishing with Platform Specification",id:"publishing-with-platform-specification",level:4},{value:"Creating a Plugin",id:"creating-a-plugin",level:2},{value:"Plugin Structure",id:"plugin-structure",level:2},{value:"Requirements for Publishing",id:"requirements-for-publishing",level:2},{value:"Related Commands",id:"related-commands",level:2}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"plugin-command",children:"Plugin Command"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"plugin"})," command helps you manage ElizaOS plugins - modular extensions that add capabilities to your agents."]}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"npx @elizaos/cli plugin <action> [options]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"actions",children:"Actions"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Action"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"publish"})}),(0,s.jsx)(i.td,{children:"Publish a plugin to a registry"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"publishing-plugins",children:"Publishing Plugins"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"publish"})," command allows you to publish an ElizaOS plugin to a registry:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"npx @elizaos/cli plugin publish [options]\n"})}),"\n",(0,s.jsx)(i.h3,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Option"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"-r, --registry <registry>"})}),(0,s.jsx)(i.td,{children:'Target registry (default: "elizaOS/registry")'})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"-n, --npm"})}),(0,s.jsx)(i.td,{children:"Publish to npm instead of GitHub"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"-t, --test"})}),(0,s.jsx)(i.td,{children:"Test publish process without making changes"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"-p, --platform <platform>"})}),(0,s.jsx)(i.td,{children:"Specify platform compatibility (node, browser, universal)"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"publishing-process",children:"Publishing Process"}),"\n",(0,s.jsxs)(i.p,{children:["When you run the ",(0,s.jsx)(i.code,{children:"publish"})," command, ElizaOS will:"]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Validate that you're in a plugin directory"}),"\n",(0,s.jsx)(i.li,{children:"Check for required GitHub credentials"}),"\n",(0,s.jsx)(i.li,{children:"Validate the plugin package.json"}),"\n",(0,s.jsx)(i.li,{children:"Build the plugin"}),"\n",(0,s.jsx)(i.li,{children:"Publish to the specified registry (GitHub by default, or npm if specified)"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(i.h4,{id:"test-publishing",children:"Test Publishing"}),"\n",(0,s.jsx)(i.p,{children:"Test the publishing process without actually publishing:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"npx @elizaos/cli plugin publish --test\n"})}),"\n",(0,s.jsx)(i.h4,{id:"publishing-to-npm",children:"Publishing to npm"}),"\n",(0,s.jsx)(i.p,{children:"Publish your plugin to npm:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"# First make sure you're logged in to npm\nnpm login\n\n# Then publish\nnpx @elizaos/cli plugin publish --npm\n"})}),"\n",(0,s.jsx)(i.h4,{id:"publishing-with-platform-specification",children:"Publishing with Platform Specification"}),"\n",(0,s.jsx)(i.p,{children:"Specify platform compatibility when publishing:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"npx @elizaos/cli plugin publish --platform node\n"})}),"\n",(0,s.jsx)(i.h2,{id:"creating-a-plugin",children:"Creating a Plugin"}),"\n",(0,s.jsxs)(i.p,{children:["To create a new plugin, use the general ",(0,s.jsx)(i.code,{children:"create"})," command with the plugin type:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"npx @elizaos/cli create --type plugin\n"})}),"\n",(0,s.jsx)(i.p,{children:"This will guide you through the process of creating a new plugin project with the proper structure."}),"\n",(0,s.jsx)(i.h2,{id:"plugin-structure",children:"Plugin Structure"}),"\n",(0,s.jsx)(i.p,{children:"A typical ElizaOS plugin has this structure:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"my-plugin/\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 index.ts        # Plugin entry point\n\u251c\u2500\u2500 dist/               # Compiled code (generated)\n\u251c\u2500\u2500 package.json        # Plugin metadata and dependencies\n\u2514\u2500\u2500 tsconfig.json       # TypeScript configuration\n"})}),"\n",(0,s.jsxs)(i.p,{children:["The main plugin definition is in ",(0,s.jsx)(i.code,{children:"src/index.ts"}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"import type { Plugin } from '@elizaos/core';\n\nexport const myPlugin: Plugin = {\n  name: 'my-plugin',\n  description: 'My custom plugin for ElizaOS',\n\n  // Plugin components\n  actions: [],\n  services: [],\n  providers: [],\n  models: {},\n\n  // Initialization function\n  async init(config) {\n    // Setup code\n  },\n};\n\nexport default myPlugin;\n"})}),"\n",(0,s.jsx)(i.h2,{id:"requirements-for-publishing",children:"Requirements for Publishing"}),"\n",(0,s.jsx)(i.p,{children:"Before publishing a plugin, ensure:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Your plugin name should include ",(0,s.jsx)(i.code,{children:"plugin-"})," (e.g., ",(0,s.jsx)(i.code,{children:"@elizaos/plugin-discord"}),")"]}),"\n",(0,s.jsx)(i.li,{children:"A complete package.json with name, version, and description"}),"\n",(0,s.jsx)(i.li,{children:"GitHub credentials if publishing to the ElizaOS registry"}),"\n",(0,s.jsx)(i.li,{children:"npm login if publishing to npm"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/cli/create",children:(0,s.jsx)(i.code,{children:"create"})}),": Create a new plugin"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/cli/projects",children:(0,s.jsx)(i.code,{children:"project list-plugins"})}),": List available plugins to install"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/cli/projects",children:(0,s.jsx)(i.code,{children:"project add-plugin"})}),": Add a plugin to your project"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/docs/cli/projects",children:(0,s.jsx)(i.code,{children:"project remove-plugin"})}),": Remove a plugin from your project"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},71184:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var l=n(14041);const s={},t=l.createContext(s);function r(e){const i=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:i},e.children)}}}]);